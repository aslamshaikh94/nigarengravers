{"version":3,"file":"908.4822d251a69ba368c091.js","mappings":"6YAWIA,EAAU,G,qkBAEdA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKJ,KAAW,YAAiB,WCoHlD,QA9Ha,WACX,IAAQM,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA8CE,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAjEC,iBAAoBC,GAA5B,aAAuC,GAAvC,GAA4BA,OAE5B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,CAC/BG,MAAO,GACPC,SAAU,GACVC,gBAAiB,KAHnB,eAAOC,EAAP,KAAaC,EAAb,KAKQJ,EAAoBG,EAApBH,MAAOC,EAAaE,EAAbF,SAETI,EAAU,CACdL,MAAAA,EACAC,SAAAA,GAGIK,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdN,EAAQ,EAAD,KAAMD,GAAN,cAAaM,EAAOC,KAC3BX,EAAS,EAAD,KAAMD,GAAN,cAAcW,EAAO,OA4BzBE,EAAY,mCAAG,gHAtBfC,EACAC,SACAC,UACCC,EAAAA,EAAAA,IAAcf,KACjBc,ECrBe,uCDuBZE,EAAAA,EAAAA,IAAiBf,KACpBY,ECzBF,uFD2BmBA,GAAaC,KAC9Bf,EAAS,EAAD,KACHD,GADG,IAENI,gBAZAU,UAaAX,SAAUY,EACVb,MAAOc,KAEF,GAMU,kCAcPG,EAAAA,EAAAA,IAAmCZ,GAd5B,mBAGfa,EAHe,EAGfA,OAHe,IAIfC,KACEhB,KACEiB,EANW,EAMXA,cACKxB,EAPM,EAOXyB,IACAC,EARW,EAQXA,YACAtB,EATW,EASXA,MACAuB,EAVW,EAUXA,YACAC,EAXW,EAWXA,SAIS,MAAXN,EAfa,mCAgBQO,EAAAA,EAAAA,MAhBR,QAgBTC,EAhBS,OAiBT/B,EAAmB,CACvB6B,SAAAA,EACAJ,cAAAA,EACAxB,OAAAA,EACA0B,YAAAA,EACAK,MAAOD,EACP1B,MAAAA,EACAuB,YAAAA,GAEFjC,GAASsC,EAAAA,EAAAA,IAAsBjC,KAC/BkC,EAAAA,EAAAA,IAAY,CAAElC,iBAAAA,IA3BC,kCAvBD,IAEdkB,EACAC,IAoBe,OAAH,qDAqClB,OAAIlB,EAAe,gBAAC,KAAD,CAAUkC,GAAIC,EAAAA,KAG/B,uBAAKC,UAAU,QACb,uBAAKA,UAAU,eACb,qCACA,uBAAKA,UAAU,aACb,wBAAMC,SAAU,SAAA1B,GAAC,OAZJ,SAAAA,GACnBA,EAAE2B,iBACFvB,IAU2BwB,CAAa5B,KAChC,gBAAC,KAAD,CACE6B,MAAM,QACN3B,KAAK,QACL4B,KAAK,QACL3B,MAAOV,EACPsC,UAAQ,EACRxC,MAAOA,EAAME,MACbuC,SAAUjC,IAEZ,gBAAC,KAAD,CACE8B,MAAM,WACN3B,KAAK,WACLC,MAAOT,EACPoC,KAAK,WACLC,UAAQ,EACRxC,MAAOA,EAAMG,SACbsC,SAAUjC,IAEZ,gBAACkC,EAAA,EAAD,CACEH,KAAK,SACLI,QAAQ,UACRT,UAAU,YACVU,QAAS/B,GAJX,iB,iEE5HRgC,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,4gBAA6gB,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,wCAAwC,sCAAsC,uCAAuC,MAAQ,GAAG,SAAW,+RAA+R,eAAiB,CAAC,yqBAAyqB,0eAA4e,8YAA8Y,WAAa,MAE7jF","sources":["webpack://nigar/./src/views/Auth/index.scss?056d","webpack://nigar/./src/views/Auth/index.js","webpack://nigar/./src/constants/index.js","webpack://nigar/./src/views/Auth/index.scss"],"sourcesContent":["\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./index.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./index.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useState } from 'react'\nimport {\n  callUserSigninWithEmailPasswordApi,\n  callCurrentUserTokenIdApi\n} from '@api/auth'\nimport { userAuthSuccessAction } from '@actions'\nimport { ADMIN_ROUTE } from '@constants/routes'\nimport { ERROR_MESSAGES } from '@constants/'\nimport { useStore, setAppStore } from '@store'\nimport { useSelector } from 'react-redux'\nimport { validatePassword, validateEmail } from '@utils'\nimport Button from 'react-bootstrap/Button'\nimport { InputField } from '@shared/FormFields'\nimport { Navigate } from 'react-router-dom'\nimport './index.scss'\n\nconst Auth = () => {\n  const { dispatch } = useStore()\n  const { loggedInUserData: { userId } = {} } = useSelector(state => state.auth)\n\n  const [error, setError] = useState({})\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n    confirmPassword: ''\n  })\n  const { email, password } = user\n\n  const payload = {\n    email,\n    password\n  }\n\n  const handleChange = e => {\n    const { name, value } = e.target\n    setUser({ ...user, [name]: value })\n    setError({ ...error, [name]: '' })\n  }\n\n  const { passwordErrorMessage, emailErrorMessage } = ERROR_MESSAGES\n\n  const isFormValid = () => {\n    let confirmPass\n    let validPass\n    let validEmail\n    if (!validateEmail(email)) {\n      validEmail = emailErrorMessage\n    }\n    if (!validatePassword(password)) {\n      validPass = passwordErrorMessage\n    }\n    if (confirmPass || validPass || validEmail) {\n      setError({\n        ...error,\n        confirmPassword: confirmPass,\n        password: validPass,\n        email: validEmail\n      })\n      return false\n    } else {\n      return true\n    }\n  }\n\n  const handleSignIn = async () => {\n    if (isFormValid()) {\n      const {\n        status,\n        data: {\n          user: {\n            emailVerified,\n            uid: userId,\n            displayName,\n            email,\n            phoneNumber,\n            photoURL\n          }\n        }\n      } = await callUserSigninWithEmailPasswordApi(payload)\n      if (status === 200) {\n        const jwtToken = await callCurrentUserTokenIdApi()\n        const loggedInUserData = {\n          photoURL,\n          emailVerified,\n          userId,\n          displayName,\n          token: jwtToken,\n          email,\n          phoneNumber\n        }\n        dispatch(userAuthSuccessAction(loggedInUserData))\n        setAppStore({ loggedInUserData })\n      }\n    }\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    handleSignIn()\n  }\n\n  if (userId) return <Navigate to={ADMIN_ROUTE} />\n\n  return (\n    <div className='Auth'>\n      <div className='FormWrapper'>\n        <h3>Sign In</h3>\n        <div className='FromGroup'>\n          <form onSubmit={e => handleSubmit(e)}>\n            <InputField\n              label='Email'\n              name='email'\n              type='email'\n              value={email}\n              required\n              error={error.email}\n              onChange={handleChange}\n            />\n            <InputField\n              label='Password'\n              name='password'\n              value={password}\n              type='password'\n              required\n              error={error.password}\n              onChange={handleChange}\n            />\n            <Button\n              type='submit'\n              variant='primary'\n              className='btn-block'\n              onClick={handleSignIn}\n            >\n              Sign In\n            </Button>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Auth\n","export const MY_PROFILE_LEFT_NAVE = [\n  'Personal Details',\n  'Profile Title & Overview',\n  'Featured',\n  'Licenses & Certification',\n  'Skills',\n  'Hourly Rates',\n  'Work Experience',\n  'Languages'\n]\n\nexport const SEARCH_TAGS = [\n  'SAP Hana',\n  'SAP ABAP',\n  'Technology',\n  'UI Developer',\n  'Wordpress',\n  'Android Developer'\n]\n\nexport const ERROR_MESSAGES = {\n  loginErrorMessage: 'Please login first',\n  passwordNotMatchErrorMessage: 'Password not match',\n  passwordErrorMessage:\n    'Please enter password between 7 to 15 at least one numeric and a special character',\n  emailErrorMessage: 'Please enter a valid email address',\n  firstNameErrorMessage: 'Please enter first name',\n  lastNameErrorMessage: 'Please enter last name',\n  mobileErrorMessage: 'Please enter valid mobile number',\n  displayNameErrorMessage: 'Please enter display name',\n  countryErrorMessage: 'Please select country'\n}\n\nexport const DURATION = {\n  '15 Min': 15,\n  '30 Min': 30,\n  '45 Min': 45,\n  '60 Min': 60\n}\n\nexport const RAZORPAY_URL = 'https://checkout.razorpay.com/v1/checkout.js'\n\nexport const WavSoundEffect =\n  'https://firebasestorage.googleapis.com/v0/b/expertbunch-c5b78.appspot.com/o/kpSoundEffect.wav?alt=media&token=045bf022-0cdc-46e9-9586-013a72c100a5'\nexport const VttSoundEffect =\n  'https://firebasestorage.googleapis.com/v0/b/expertbunch-c5b78.appspot.com/o/kpSoundEffectCaption.vtt?alt=media&token=ed1098ab-a4dc-40af-95a0-d2024577cc41'\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Auth{width:100vw;height:100vh;display:flex;justify-content:center;align-items:center}.Auth .FormWrapper{display:flex;flex-direction:column;align-items:center;background-color:#fff;border-radius:5px;padding:2rem;width:100%;max-width:400px}.Auth .FormWrapper .Logo{width:50px;margin-bottom:1rem;cursor:pointer}.Auth .FormWrapper .FromGroup{width:100%}.Auth .FormWrapper .ResetPassword{text-align:right;margin:.5rem 0}.Auth .FormWrapper .googleBtn{border:none;color:#222;background-color:#fff;box-shadow:0 1px 2px 1px #ddd}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/views/Auth/index.scss\",\"webpack://./src/shared/_mixins.scss\",\"webpack://./src/shared/_colors.scss\"],\"names\":[],\"mappings\":\"AACA,MACE,WAAA,CACA,YAAA,CCQA,YAFI,CAOF,sBDZ4B,CCe5B,kBDfgB,CAClB,mBCMA,YAFI,CAIF,qBDP8B,CCa9B,kBDbkB,CAClB,qBEPI,CFQJ,iBAAA,CACA,YAAA,CACA,UAAA,CACA,eAAA,CACA,yBACE,UAAA,CACA,kBAAA,CACA,cAAA,CAEF,8BACE,UAAA,CAEF,kCACE,gBAAA,CACA,cAAA,CAEF,8BACE,WAAA,CACA,UEnBE,CFoBF,qBAAA,CACA,6BAAA\",\"sourcesContent\":[\"@import '@shared/_colors', '@shared/_mixins';\\n.Auth {\\n  width: 100vw;\\n  height: 100vh;\\n  @include flex($a: center, $j: center);\\n  .FormWrapper {\\n    @include flex($a: center, $d: column);\\n    background-color: $white;\\n    border-radius: 5px;\\n    padding: 2rem;\\n    width: 100%;\\n    max-width: 400px;\\n    .Logo {\\n      width: 50px;\\n      margin-bottom: 1rem;\\n      cursor: pointer;\\n    }\\n    .FromGroup {\\n      width: 100%;\\n    }\\n    .ResetPassword {\\n      text-align: right;\\n      margin: 0.5rem 0;\\n    }\\n    .googleBtn {\\n      border: none;\\n      color: $black;\\n      background-color: #ffffff;\\n      box-shadow: 0 1px 2px 1px #ddd;\\n    }\\n  }\\n}\\n\",\"@import \\\"./_colors.scss\\\";\\n\\n@mixin flex(\\n  $d: false,\\n  $j: false,\\n  $a: false,\\n  $w: false,\\n  $g: false,\\n  $s: false,\\n  $f: flex\\n) {\\n  display: $f;\\n  @if $d {\\n    flex-direction: $d;\\n  }\\n  @if $j {\\n    justify-content: $j;\\n  }\\n  @if $a {\\n    align-items: $a;\\n  }\\n  @if $w {\\n    flex-wrap: $w;\\n  }\\n  @if $g {\\n    flex-grow: $g;\\n  }\\n  @if $s {\\n    flex-shrink: $s;\\n  }\\n}\\n\\n@mixin wrapper {\\n  padding-bottom: 20px;\\n}\\n\\n$mobileTab: 768px;\\n$mobile: 425px;\\n\",\"$white: #ffffff;\\n$blue: #2777c6;\\n$skyBlue: #d6ebff;\\n$darkBlue: #23374d;\\n$purple: #7048c6;\\n$gray: #999999;\\n$lightGray: #f8f9fa;\\n$black: #222222;\\n$darkGray: #444444;\\n$doveGray: #666666;\\n$silver: #c2c2c2;\\n$dustyGray: #999999;\\n$golden: #f1c40f;\\n$yellow: #f3ca00;\\n$red: #d21c09;\\n$blueChill: #0084bd;\\n$green: #009e52;\\n$hawkesBlue: #d6e6fd;\\n$concrete: #f2f2f2;\\n$cyanBlue: #2980b9;\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","dispatch","useStore","useSelector","state","auth","loggedInUserData","userId","useState","error","setError","email","password","confirmPassword","user","setUser","payload","handleChange","e","target","name","value","handleSignIn","confirmPass","validPass","validEmail","validateEmail","validatePassword","callUserSigninWithEmailPasswordApi","status","data","emailVerified","uid","displayName","phoneNumber","photoURL","callCurrentUserTokenIdApi","jwtToken","token","userAuthSuccessAction","setAppStore","to","ADMIN_ROUTE","className","onSubmit","preventDefault","handleSubmit","label","type","required","onChange","Button","variant","onClick","___CSS_LOADER_EXPORT___","push","module","id"],"sourceRoot":""}